// Mocks generated by Mockito 5.4.4 from annotations
// in ingredients_scanner/test/helper/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:dartz/dartz.dart' as _i2;
import 'package:firebase_auth/firebase_auth.dart' as _i4;
import 'package:ingredients_scanner/core/error/failures.dart' as _i8;
import 'package:ingredients_scanner/core/network/network_info.dart' as _i18;
import 'package:ingredients_scanner/features/authentication/data/data_sources/auth_remote_data_source.dart'
    as _i11;
import 'package:ingredients_scanner/features/authentication/data/models/sign_in_model.dart'
    as _i13;
import 'package:ingredients_scanner/features/authentication/data/models/sign_up_model.dart'
    as _i12;
import 'package:ingredients_scanner/features/authentication/domain/entities/first_page_entity.dart'
    as _i3;
import 'package:ingredients_scanner/features/authentication/domain/entities/sign_in_entity.dart'
    as _i9;
import 'package:ingredients_scanner/features/authentication/domain/entities/sign_up_entity.dart'
    as _i10;
import 'package:ingredients_scanner/features/authentication/domain/repositories/authentication_repository.dart'
    as _i6;
import 'package:ingredients_scanner/features/user_preferences/data/data_sources/user_preferences_local_data_sources.dart'
    as _i16;
import 'package:ingredients_scanner/features/user_preferences/data/data_sources/user_preferences_remote_data_source.dart'
    as _i17;
import 'package:ingredients_scanner/features/user_preferences/data/models/user_preferences_model.dart'
    as _i5;
import 'package:ingredients_scanner/features/user_preferences/domain/entities/user_preferences.dart'
    as _i15;
import 'package:ingredients_scanner/features/user_preferences/domain/repositories/user_preferences_repositiory.dart'
    as _i14;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirstPageEntity_1 extends _i1.SmartFake
    implements _i3.FirstPageEntity {
  _FakeFirstPageEntity_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserCredential_2 extends _i1.SmartFake
    implements _i4.UserCredential {
  _FakeUserCredential_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUnit_3 extends _i1.SmartFake implements _i2.Unit {
  _FakeUnit_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserPreferencesModel_4 extends _i1.SmartFake
    implements _i5.UserPreferencesModel {
  _FakeUserPreferencesModel_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthenticationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationRepository extends _i1.Mock
    implements _i6.AuthenticationRepository {
  MockAuthenticationRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.Either<_i8.Failure, _i4.UserCredential>> signIn(
          _i9.SignInEntity? signIn) =>
      (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [signIn],
        ),
        returnValue:
            _i7.Future<_i2.Either<_i8.Failure, _i4.UserCredential>>.value(
                _FakeEither_0<_i8.Failure, _i4.UserCredential>(
          this,
          Invocation.method(
            #signIn,
            [signIn],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, _i4.UserCredential>>);

  @override
  _i7.Future<_i2.Either<_i8.Failure, _i4.UserCredential>> signUp(
          _i10.SignUpEntity? signUp) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [signUp],
        ),
        returnValue:
            _i7.Future<_i2.Either<_i8.Failure, _i4.UserCredential>>.value(
                _FakeEither_0<_i8.Failure, _i4.UserCredential>(
          this,
          Invocation.method(
            #signUp,
            [signUp],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, _i4.UserCredential>>);

  @override
  _i7.Future<_i2.Either<_i8.Failure, _i4.UserCredential>> googleSignIn() =>
      (super.noSuchMethod(
        Invocation.method(
          #googleSignIn,
          [],
        ),
        returnValue:
            _i7.Future<_i2.Either<_i8.Failure, _i4.UserCredential>>.value(
                _FakeEither_0<_i8.Failure, _i4.UserCredential>(
          this,
          Invocation.method(
            #googleSignIn,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, _i4.UserCredential>>);

  @override
  _i3.FirstPageEntity firstPage() => (super.noSuchMethod(
        Invocation.method(
          #firstPage,
          [],
        ),
        returnValue: _FakeFirstPageEntity_1(
          this,
          Invocation.method(
            #firstPage,
            [],
          ),
        ),
      ) as _i3.FirstPageEntity);

  @override
  _i7.Future<_i2.Either<_i8.Failure, _i2.Unit>> verifyEmail() =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyEmail,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i8.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #verifyEmail,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, _i2.Unit>>);

  @override
  _i7.Future<_i2.Either<_i8.Failure, _i2.Unit>> checkEmailVerification(
          _i7.Completer<dynamic>? completer) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkEmailVerification,
          [completer],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i8.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #checkEmailVerification,
            [completer],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, _i2.Unit>>);

  @override
  _i7.Future<_i2.Either<_i8.Failure, _i2.Unit>> logOut() => (super.noSuchMethod(
        Invocation.method(
          #logOut,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i8.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #logOut,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, _i2.Unit>>);
}

/// A class which mocks [UserCredential].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserCredential extends _i1.Mock implements _i4.UserCredential {
  MockUserCredential() {
    _i1.throwOnMissingStub(this);
  }
}

/// A class which mocks [AuthRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRemoteDataSource extends _i1.Mock
    implements _i11.AuthRemoteDataSource {
  MockAuthRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i4.UserCredential> signUp(_i12.SignUpModel? signUp) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [signUp],
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signUp,
            [signUp],
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> signIn(_i13.SignInModel? signIn) =>
      (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [signIn],
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signIn,
            [signIn],
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> googleAuthentication() => (super.noSuchMethod(
        Invocation.method(
          #googleAuthentication,
          [],
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #googleAuthentication,
            [],
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i2.Unit> verifyEmail() => (super.noSuchMethod(
        Invocation.method(
          #verifyEmail,
          [],
        ),
        returnValue: _i7.Future<_i2.Unit>.value(_FakeUnit_3(
          this,
          Invocation.method(
            #verifyEmail,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Unit>);
}

/// A class which mocks [UserPreferencesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserPreferencesRepository extends _i1.Mock
    implements _i14.UserPreferencesRepository {
  MockUserPreferencesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.Either<_i8.Failure, _i15.UserPreferencesEntity>>
      getUserPreferences() => (super.noSuchMethod(
            Invocation.method(
              #getUserPreferences,
              [],
            ),
            returnValue: _i7.Future<
                    _i2.Either<_i8.Failure, _i15.UserPreferencesEntity>>.value(
                _FakeEither_0<_i8.Failure, _i15.UserPreferencesEntity>(
              this,
              Invocation.method(
                #getUserPreferences,
                [],
              ),
            )),
          ) as _i7.Future<_i2.Either<_i8.Failure, _i15.UserPreferencesEntity>>);

  @override
  _i7.Future<_i2.Either<_i8.Failure, _i2.Unit>> setUserPreferences(
          _i5.UserPreferencesModel? userPreferencesModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #setUserPreferences,
          [userPreferencesModel],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i8.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #setUserPreferences,
            [userPreferencesModel],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, _i2.Unit>>);
}

/// A class which mocks [UserPreferencesLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserPreferencesLocalDataSource extends _i1.Mock
    implements _i16.UserPreferencesLocalDataSource {
  MockUserPreferencesLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i5.UserPreferencesModel> getUserPreferences() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserPreferences,
          [],
        ),
        returnValue: _i7.Future<_i5.UserPreferencesModel>.value(
            _FakeUserPreferencesModel_4(
          this,
          Invocation.method(
            #getUserPreferences,
            [],
          ),
        )),
      ) as _i7.Future<_i5.UserPreferencesModel>);

  @override
  _i7.Future<_i2.Unit> setUserPreferences(
          _i5.UserPreferencesModel? userPreferencesModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #setUserPreferences,
          [userPreferencesModel],
        ),
        returnValue: _i7.Future<_i2.Unit>.value(_FakeUnit_3(
          this,
          Invocation.method(
            #setUserPreferences,
            [userPreferencesModel],
          ),
        )),
      ) as _i7.Future<_i2.Unit>);
}

/// A class which mocks [UserPreferencesRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserPreferencesRemoteDataSource extends _i1.Mock
    implements _i17.UserPreferencesRemoteDataSource {
  MockUserPreferencesRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i5.UserPreferencesModel> getUserPreferences() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserPreferences,
          [],
        ),
        returnValue: _i7.Future<_i5.UserPreferencesModel>.value(
            _FakeUserPreferencesModel_4(
          this,
          Invocation.method(
            #getUserPreferences,
            [],
          ),
        )),
      ) as _i7.Future<_i5.UserPreferencesModel>);

  @override
  _i7.Future<_i2.Unit> setUserPreferences(
          _i5.UserPreferencesModel? userPreferencesModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #setUserPreferences,
          [userPreferencesModel],
        ),
        returnValue: _i7.Future<_i2.Unit>.value(_FakeUnit_3(
          this,
          Invocation.method(
            #setUserPreferences,
            [userPreferencesModel],
          ),
        )),
      ) as _i7.Future<_i2.Unit>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i18.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
}
